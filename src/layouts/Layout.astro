---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="We are creatives,researchers,marketers, and developers all working to make Ethereum cool again"
    />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.svg" />
    <link rel="icon" type="image/svg+xml" href="/2077-logo-white.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="keywords" content="astro, seo, meta tags" />
    <meta name="author" content="2077 Collective" />
    <meta property="og:title" content={title} />
    <meta
      property="og:description"
      content="We are creatives,researchers,marketers, and developers all working to make Ethereum cool again.
		"
    />
    <meta property="og:type" content="article" />
    <meta property="og:image" content="/og.png" />
    <meta name="twitter:card" content="twitter_image" />
    <meta property="og:url" content="{canonical_url}" />
    <meta property="og:site_name" content="2077 Collective" />
    <meta name="twitter:title" content={title} />
    <meta
      name="twitter:description"
      content="We are creatives,researchers,marketers, and developers all working to make Ethereum cool again.
		"
    />
    <meta name="twitter:image" content="/twitter.svg" />
    <meta name="twitter:card" content="summary" />
    <script is:inline>
    const setTheme = () => {
      const theme = (() => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }

      window.localStorage.setItem("theme", theme || "light");
    };

    setTheme();

    document.addEventListener("astro:after-swap", setTheme);
  </script>
  </head>
  <body>
    <slot />
    <script is:inline>
      const theme = () => {
        let btn = document.querySelector("#btn");
        const toggleDarkMode = () => {
          document.documentElement.classList.toggle("dark");
          const isDarkMode =
            document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDarkMode ? "dark" : "light");
        };
        btn.addEventListener("click", toggleDarkMode);
      };

      theme();

      document.addEventListener("astro:after-swap", theme);
    </script>
  </body>
</html>
<style lang="scss" is:global>
  @import "../styles/_fonts.scss";
  @import "../styles/_global.scss";
  @import "../styles/_reset.scss";
</style>
